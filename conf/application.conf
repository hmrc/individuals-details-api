# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = individuals-details-api
appUrl = CHANGEME


# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.individualsdetailsapi.handlers.VersioningRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.individualsdetailsapi.handlers.CustomErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.individualsdetailsapi.config.ConfigModule"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "X1wPrAoXYUb67IKfGQAcuF6HOonuslhE8ErSew493J7BVVEGfML3DrdYYoq1kkEZ"

json.encryption.key = "76fd48b978dfc4d2469eb7d64d1d7691"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  confidenceLevel = 300

  uk.gov.hmrc.individualsdetailsapi.controllers.LiveMicroserviceHelloWorldController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  uk.gov.hmrc.individualsdetailsapi.controllers.SandboxMicroserviceHelloWorldController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }


  uk.gov.hmrc.individualsdetailsapi.controllers.APIDocumentationController = {
    needsLogging = false
    needsAuditing = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    individuals-matching-api {
      host = localhost
      port = 9653
    }

    integration-framework {
      host = localhost
      port = 8443
      authorization-token = IF_BEARER_TOKEN
      environment = isit
    }
  }
}

mongodb.uri = "mongodb://127.0.0.1:27017/ogd-apis"

cache {
  enabled = true
  ttlInSeconds = 900
  collName = "individuals-details-cache"
  key = "individuals-details"
}

versioning {

  unversionedContexts = [
    "/api",
    "/admin",
    "/ping"
  ]
}

api-config {
  scopes {
    "read:individuals-details-laa-c3" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J"]
    }
    "read:individuals-details-laa-c4" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J", "G", "H"]
    }
    "read:individuals-details-hmcts-c3" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J"]
    }
    "read:individuals-details-hmcts-c4" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J", "G", "H"]
    }
    "read:individuals-details-lsani-c1" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J"]
    }
    "read:individuals-details-lsani-c3" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J"]
    }
    "read:individuals-details-nictsejo-c4" {
       fields = ["A", "B", "C", "D", "E", "F", "I", "J"]
    }
  }

  endpoints {
    addresses {
        endpoint = "/individuals/details/addresses?matchId=<matchId>"
        title = "Get addresses"
        fields {
          A = "residences/address/line1"
          B = "residences/address/line2"
          C = "residences/address/line3"
          D = "residences/address/line4"
          E = "residences/address/line5"
          F = "residences/address/postcode"
          I = "residences/type"
          J = "residences/noLongerUsed"
        }
    }
    contact-details {
        endpoint = "/individuals/details/contact-details?matchId=<matchId>"
        title = "Get contact details"
        fields {
          G = "contactDetails/detail"
          H = "contactDetails/type"
        }
    }
  }
}
